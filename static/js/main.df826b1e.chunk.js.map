{"version":3,"sources":["imgs/db.svg","imgs/spring.svg","imgs/kafka.svg","imgs/usf.svg","imgs/java.svg","imgs/email.svg","logo.svg","components/Navigation.js","components/Header.js","components/FeedItem.js","components/Feed.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","display","menuButton","marginRight","hide","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","Navigation","handlePage","classes","React","useState","open","setOpen","className","Drawer","variant","clsx","paper","IconButton","onClick","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","primary","event","window","location","href","flexGrow","title","Header","AppBar","position","Toolbar","Typography","margin","flexDirection","height","media","text","content","FeedItem","img","Card","CardMedia","component","image","CardContent","gutterBottom","color","flexWrap","marginTop","Feed","page","DatabaseIcon","Spring","Kafka","University","Java","Email","togglePage","createMuiTheme","palette","main","secondary","textAlign","App","props","document","ThemeProvider","newPage","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df826b1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/db.c4ae6596.svg\";","module.exports = __webpack_public_path__ + \"static/media/spring.edf462fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/kafka.717a48c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/usf.76d7c472.svg\";","module.exports = __webpack_public_path__ + \"static/media/java.9b6c7cf4.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.90a9652a.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FaceIcon from '@material-ui/icons/Face';\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\nimport HomeIcon from '@material-ui/icons/Home'\nimport React, { useState } from 'react';\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n      },\n      menuButton: {\n        marginRight: 36,\n      },\n      hide: {\n        display: 'none',\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n      },\n      drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.enteringScreen,\n        }),\n      },\n      drawerClose: {\n        transition: theme.transitions.create('width', {\n          easing: theme.transitions.easing.sharp,\n          duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n          width: theme.spacing(8)\n        },\n      },\n      toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n      },\n}));\n\nexport default function Navigation({ handlePage }) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawer = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawer}>\n                        {!open ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem button key=\"0\" onClick={() => handlePage(\"main\")}>\n                        <ListItemIcon><HomeIcon /></ListItemIcon>\n                        <ListItemText primary=\"home\" />\n                    </ListItem>\n                    <ListItem button key=\"1\" onClick={() => handlePage(\"about\")}>\n                        <ListItemIcon><FaceIcon /></ListItemIcon>\n                        <ListItemText primary=\"about\" />\n                    </ListItem>\n                    <ListItem button key=\"2\" onClick={event =>  window.location.href='https://github.com/abrackx'}>\n                        <ListItemIcon><GitHubIcon /></ListItemIcon>\n                        <ListItemText primary=\"github\" />\n                    </ListItem>\n                    <ListItem button key=\"3\" onClick={() => handlePage(\"contact\")}>\n                        <ListItemIcon><PhoneAndroidIcon /></ListItemIcon>\n                        <ListItemText primary=\"contact\" />\n                    </ListItem>\n                </List>\n            </Drawer>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} >\n            alex brackx | software engineer\n            </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '55vh',\n        height: '35vh',\n    },\n    media: {\n        width: '30%',\n        height: 'auto',\n    },\n    text: {\n        justifyContent: 'flex-end',\n    },\n    content: {\n        width: '40%',\n    }\n}));\n\nexport default function FeedItem({ img, title, text }) {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardMedia\n                component=\"img\"\n                className={classes.media}\n                image={img}\n                title={title}\n            />\n            <CardContent className={classes.content}>\n                <Typography gutterBottom component=\"h2\">\n                    {title}\n                </Typography>\n                <Typography className={classes.text} variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {text}\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Box } from '@material-ui/core';\nimport { Divider } from '@material-ui/core';\nimport FeedItem from './FeedItem'\nimport DatabaseIcon from '../imgs/db.svg'\nimport Kafka from '../imgs/kafka.svg'\nimport Spring from '../imgs/spring.svg'\nimport University from '../imgs/usf.svg'\nimport Java from '../imgs/java.svg'\nimport Email from '../imgs/email.svg'\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        display: 'flex',\n        width: '100%',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        marginTop: theme.spacing(4),\n    },\n}));\n\nfunction Feed({ page }) {\n    const classes = useStyles();\n\n    const togglePage = (page) => {\n        switch (page) {\n            case \"main\": {\n                return (\n                    <div className={classes.content}>\n                        <FeedItem\n                            title=\"full stack developer\"\n                            text=\"capable in the front-end, at home in the back-end\"\n                            img={DatabaseIcon}\n                        />\n                        <FeedItem\n                            title=\"enterprise ready\"\n                            text=\"designing software built to last\"\n                            img={Spring}\n                        />\n                        <FeedItem\n                            title=\"experienced system architect\"\n                            text=\"from data modeling to kafka implementations\"\n                            img={Kafka}\n                        />\n                    </div>\n                )\n            }\n            case \"about\": {\n                return (\n                    <div className={classes.content}>\n                        <FeedItem\n                            title=\"academic foundations\"\n                            text=\"completed b.a. in mathematics at the university of south florida\"\n                            img={University}\n                        />\n                        <FeedItem\n                            title=\"career experience\"\n                            text=\"currently wearing many hats at Masonite International, programming in Java 8 using Spring\"\n                            img={Java}\n                        />\n                    </div>\n                )\n            }\n            case \"github\": {\n                return (\n                    <div className={classes.content}>\n                        <FeedItem\n                            title=\"full stack developer\"\n                            text=\"capable in the front-end, at home in the back-end\"\n                            img={DatabaseIcon}\n                        />\n                        <FeedItem\n                            title=\"full stack developer\"\n                            text=\"capable in the front-end, at home in the back-end\"\n                            img={Spring}\n                        />\n                    </div>\n                )\n            }\n            case \"contact\": {\n                return (\n                    <div className={classes.content}>\n                        <FeedItem\n                            title=\"reach out\"\n                            text=\"feel free to contact me with gigs, advice, song requests or whatever else you can think of at abrackx@gmail.com\"\n                            img={Email}\n                        />\n                    </div>\n                )\n            }\n        }\n    }\n\n    return (\n        <div className={classes.content}>\n            {togglePage(page)}\n        </div>\n    );\n}\n\nexport default Feed;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navigation from './components/Navigation';\nimport Header from './components/Header';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Feed from './components/Feed';\nimport Grid from '@material-ui/core/Grid';\nimport { Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FFFFFF',\n    },\n    secondary: {\n      main: '#C8E6C9',\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    width: '99%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  root: {\n    display: 'flex',\n    textAlign: 'center'\n  }\n}));\n\n\nfunction App(props) {\n  const [page, handlePage] = React.useState(\"main\");\n  const setPage = (newPage) => {\n    handlePage(newPage)\n  }\n  document.title='brahts.dev';\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={theme}>\n        <Navigation handlePage={setPage} />\n        <main className={classes.content}>\n          <Header />\n          <Feed page={page} />\n        </main>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}